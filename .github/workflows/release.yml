name: Release

on:
  release:
    types: [published]

jobs:
  libs:
    name: Release Libraries

    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
        os: ['ubuntu-22.04', 'ubuntu-24.04']

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: |
          **/pyproject.toml
          **/requirements*.txt

    - name: Prepare Python env
      run: |
        python -m pip install -U pip setuptools wheel
        mkdir dist

    - name: Install dependencies
      run: |
        pip install -r ./requirements.txt

    - name: Install Nuitka
      run: |
        pip install Nuitka==2.7.12

    - name: Build library with Nuitka
      run: |
        DIR_LIBS=$Python_ROOT_DIR/lib/python${{ matrix.python-version }}/site-packages
        nuitka --module src/engine_jinja.py

    - name: Build wrapper library
      run: |
        gcc -fPIC -shared -o libjinja.so src/wrapper.c -I$(python3-config --includes) -L$(python3-config --prefix)/lib -lpython${{ matrix.python-version }}
        ls -lah

    - name: Prepare artifacts
      run: |
        mkdir -p libjinja-python${{ matrix.python-version }}-${{ matrix.os }}
        cp libjinja.so libjinja-python${{ matrix.python-version }}-${{ matrix.os }}/
        cp src/engine_jinja.py libjinja-python${{ matrix.python-version }}-${{ matrix.os }}/
        tar -czf libjinja-python${{ matrix.python-version }}-${{ matrix.os }}.tar.gz libjinja-python${{ matrix.python-version }}-${{ matrix.os }}

    - name: Upload release assets
      uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: libjinja-python${{ matrix.python-version }}-${{ matrix.os }}.tar.gz
